{"name":"Sbase-for-android","tagline":"Shell tools that suck less!","body":"# FOREWORD\r\n\r\nHi. First, I would like to direct you to the file called 'README' (without\r\nextension) -- it is the file where you will find information on the\r\nsbase (\"suck less\") project, written by the authors.\r\n\r\nThis file is only about the Android \"port\" (if it can be called that)\r\n\r\nI created this project because:\r\n\r\n1. I am tired of some limitations of Busybox -- while an excellent\r\nproject, due to its own lightweight nature, the lack of certain command\r\nline modifiers has been driving me up the wall.\r\nA good example is that when I am checking files on my phone, I would like,\r\nas in my other shells, to be able to type 'ls -ltr' to sort them\r\nmost recent last. Alas, I cannot.\r\n\r\n2. While sbase is a well written project that compiles almost anywhere,\r\nAndroid was not put together with POSIX compatibility as its first and\r\nforemost goal. Thus, the \"upstream\" sbase repository does not build.\r\n\r\n# A LAUNDRY LIST\r\n\r\nNote: this is now sbase + some interesting utils from ubase\r\nas well. _ubase_, by the same less sucky people!\r\n\r\nSome of the things I have done to please the Android ndk:\r\n\r\n* Fixed some imports, such as termios.\r\n* Added some imports and code such as fmemopen\r\n* Stubbed out some missing functions such as linkat()\r\n* Added missing default functions such as stdtold()\r\n* Added missing POSIX definitions (now more than 1 :))\r\n* Created Android-specific Makefiles and Android.mk\r\n\r\nI also borrowed some code from OpenBSD. Unlike Linux's GNU utils, there is no\r\nlicense incompatibility. It is:\r\n\r\n* regex.h\r\n* libutil/regex2.h\r\n* libutil/cclass.h\r\n* libutil/cname.h\r\n* libutil/engine.c\r\n* libutil/fmemopen.c|h\r\n* libutil/getline.c\r\n* libutil/regcomp.c\r\n* libutil/regerror.c\r\n* libutil/regexec.c\r\n* libutil/regfree.c\r\n* libutil/utils.c\r\n\r\n# LIMITATIONS\r\n\r\nAt this point, there are several:\r\n\r\n* The code could be cleaner, especially the way I mix BSD imports with the \r\n  original code.\r\n* This only builds for ARM. This could be easily fixed by adding a few\r\n  targets to the build files.\r\n* Others, than I cannot think of right now but I am sure they are there\r\n  nontheless.\r\n\r\n## Command (current) limitations\r\n\r\n* lsusb could not be implemented because /sys/bus/usb/devices is empty\r\n* ps, who could not be implemented in their raw form as they rely on u/wtmp\r\n* same goes for last\r\n* hwclock needs to be rewritten\r\n* halt is only to be called if you wish to freeze your phone, e.g. to\r\n  interrupt an otherwise dangerous operation (rm -rf?)\r\n\r\n# BUILDING\r\n\r\n    make\r\n\r\n# CONTACT\r\n\r\nMy favorite ways to be contacted are:\r\n* Google+ (https://plus.google.com/+ChrisRavenscroft/posts)\r\n* XDA! (\"cyansmoker\")\r\n\r\nCheers,\r\n\r\nChris F. Ravenscroft\r\n\r\n![\"This sucks less!\" from stocksnap.io](https://github.com/Fusion/sbase-for-android/raw/master/res/apic.jpg)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}